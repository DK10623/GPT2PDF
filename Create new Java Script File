function convertToPDF() {
	// Get the ChatGPT conversation from the user
	const chatGPTConversation = prompt('Please enter the ChatGPT conversation you would like to convert to PDF:');

	// Convert the ChatGPT conversation to PDF
	const doc = new PDFDocument();
	doc.pipe(fs.createWriteStream('output.pdf'));

	const messages = chatGPTConversation.split('\n');
	for (let i = 0; i < messages.length; i++) {
		// Check if the message contains a code snippet
		if (/\`\`\`/.test(messages[i])) {
			// Format the code snippet with Pygments and add it to the PDF
			const code = messages[i].replace(/\`\`\`.*\n/, '');
			doc.text(code, { font: 'Courier', size: 10, indent: 20, continued: true });
			highlight(code, 'python', function(err, formatted) {
				doc.text(formatted, { font: 'Courier', size: 10, indent: 20 });
			});
		} else if (/^\|.*\|$/.test(messages[i])) {
			// Format the table with Papa Parse and add it to the PDF
			const table = messages[i].split('|').slice(1, -1).map((cell) => cell.trim());
			const csv = Papa.unparse({ fields: table });
			const tableLines = csv.split('\n');
			for (let j = 0; j < tableLines.length; j++) {
				const row = tableLines[j].split(',');
				for (let k = 0; k < row.length; k++) {
					doc.text(row[k], { font: 'Courier', size: 10, indent: 20, continued: true });
				}
				doc.moveDown();
			}
		} else {
			// Add the plain text message to the PDF
			doc.text(messages[i],
